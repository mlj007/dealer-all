<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:tx="http://www.springframework.org/schema/tx"   
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
">
	
	
	
	<bean id="readDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="${read.jdbc.url}"/>
		<property name="username" value="${read.jdbc.username}"/>
		<property name="password" value="${read.jdbc.password}"/>
		<property name="initialSize" value="${read.jdbc.initialPoolSize}" />
		<property name="minIdle" value="${read.jdbc.minPoolSize}" />
		<property name="maxActive" value="${read.jdbc.maxPoolSize}" />
		<property name="maxWait" value="60000" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" /> 
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> 
		<property name="filters" value="stat" />
	</bean>
	<bean id="writeDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="${write.jdbc.url}"/>
		<property name="username" value="${write.jdbc.username}"/>
		<property name="password" value="${write.jdbc.password}"/>
		<property name="initialSize" value="${write.jdbc.initialPoolSize}" />
		<property name="minIdle" value="${write.jdbc.minPoolSize}" />
		<property name="maxActive" value="${write.jdbc.maxPoolSize}" />
		<property name="maxWait" value="60000" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" /> 
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> 
		<property name="filters" value="stat" />
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
			</list>
		</property>
	</bean>
	<bean id="readWriteDataSource" class="com.chexun.base.framework.core.datasource.ReadWriteDataSource">  
		<property name="writeDataSource" ref="writeDataSource"/>  
		<property name="readDataSourceMap">  
			<map>  
				<entry key="readDataSource1" value-ref="readDataSource"/>  
			</map>  
		</property>  
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="readWriteDataSource"></property>
	</bean>
	
	<bean id="readWriteSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="readWriteDataSource" />
		<property name="configLocation"  value="classpath:/config/SqlMapConfig.xml"/>
		<property name="mapperLocations" value="classpath*:/com/chexun/dealer/mybatis/**/*Mapper.xml" />
		<property name="typeAliasesPackage" value="com.chexun.dealer.model.car" />
	</bean>
	<bean id="readWriteSqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="readWriteSqlSessionFactory"/>
	</bean>
	<!-- 慢SQL统计 -->
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<!--慢SQL统计，如果SQL执行时间超过一定时间则记录为慢SQL  -->
		<property name="slowSqlMillis" value="1500" />
		<!--慢SQL统计日志输出  -->
		<property name="logSlowSql" value="true" />
		 <!--合并SQL统计 例如select * from table t where t.id =1，会被变为select * from table t where t.id =？来统计  -->
		<property name="mergeSql" value="true" />
	</bean>
	
	
</beans>